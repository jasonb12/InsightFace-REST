# Python requirements optimized for ARM64/Jetson with JetPack 6.2
# CUDA 12.6, TensorRT 10.3, cuDNN 9.3

# Core web framework
fastapi>=0.104.0
fastapi-offline
uvicorn[standard]>=0.23.0
gunicorn>=21.0.0

# File and request handling
aiofiles>=23.0.0
requests>=2.31.0
httpx>=0.25.0
python-multipart>=0.0.6

# Data serialization
ujson>=5.8.0
msgpack>=1.0.7

# Progress and logging
tqdm>=4.66.0
colorlog>=6.7.0

# High-performance computing
numba>=0.58.0
# Note: CuPy is pre-installed in JetPack 6.2
# cupy-cuda12x  # Already available in base image

# Computer vision (use system OpenCV from JetPack)
# opencv-python  # Use system opencv from apt
scikit-image>=0.21.0

# ONNX and runtime (ARM64 compatible versions)
onnx>=1.15.0
# Use regular ONNX Runtime for Jetson (TensorRT EP will be configured via providers)
# onnxruntime-gpu is not available for ARM64, use regular onnxruntime
onnxruntime>=1.16.0
# onnx-simplifier>=0.4.33  # Removed due to build complexity, not critical for core functionality

# Image processing and utilities
Pillow>=10.0.0
exifread>=3.0.0
imageio>=2.31.0
scikit-learn>=1.3.0

# NumPy compatibility fix for OpenCV and other compiled modules
numpy<2.0

# Async HTTP
aiohttp>=3.8.6

# Retry logic
tenacity>=8.2.3

# TensorRT client (optional for Triton inference)
tritonclient[http,grpc]>=2.37.0

# PyTurboJPEG for fast JPEG decoding (build from source for ARM64)
PyTurboJPEG>=1.7.0

# Networking and utilities
psutil>=5.9.0 