# Dockerfile for InsightFace-REST on Jetson AGX with JetPack 6.2
# Based on L4T JetPack r36.4.0 which is compatible with JetPack 6.2 (r36.4.3)

FROM nvcr.io/nvidia/l4t-jetpack:r36.4.0

# Environment setup
ENV LC_ALL=C.UTF-8
ENV LANG=C.UTF-8
ENV DEBIAN_FRONTEND=noninteractive
ENV PIP_INSTALL="python3 -m pip --no-cache-dir install --upgrade"

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3-pip \
    python3-dev \
    python3-setuptools \
    cmake \
    build-essential \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    libglib2.0-0 \
    libturbojpeg0-dev \
    wget \
    curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python packages
COPY requirements_jetson.txt .

# Install Python requirements (excluding onnxruntime)
RUN python3 -m pip --no-cache-dir install --upgrade pip setuptools wheel

# Install most requirements first
RUN python3 -m pip --no-cache-dir install --upgrade \
    fastapi>=0.104.0 \
    fastapi-offline \
    uvicorn[standard]>=0.23.0 \
    gunicorn>=21.0.0 \
    aiofiles>=23.0.0 \
    requests>=2.31.0 \
    httpx>=0.25.0 \
    python-multipart>=0.0.6 \
    ujson>=5.8.0 \
    msgpack>=1.0.7 \
    tqdm>=4.66.0 \
    colorlog>=6.7.0 \
    numba>=0.58.0 \
    scikit-image>=0.21.0 \
    onnx>=1.15.0 \
    Pillow>=10.0.0 \
    exifread>=3.0.0 \
    imageio>=2.31.0 \
    scikit-learn>=1.3.0 \
    "numpy<2.0" \
    aiohttp>=3.8.6 \
    tenacity>=8.2.3 \
    "tritonclient[http,grpc]>=2.37.0" \
    PyTurboJPEG>=1.7.0 \
    psutil>=5.9.0

# Install ONNX Runtime with GPU support using dustynv's optimized version for JetPack 6.2
# This includes proper CUDA/TensorRT/cuDNN 9.x compatibility
RUN python3 -m pip install --extra-index-url https://pypi.jetson-ai-lab.dev/jp6/cu126 onnxruntime-gpu

WORKDIR /app

# Copy application code
COPY api_trt /app/api_trt

# Copy entrypoint script
COPY entrypoint_jetson.sh /app/entrypoint.sh
RUN chmod +x /app/entrypoint.sh

# Expose port
EXPOSE 18080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:18080/info || exit 1

# Set entrypoint
ENTRYPOINT ["/app/entrypoint.sh"] 